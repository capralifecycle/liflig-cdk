// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`setup new cloudtrail to slack integration 1`] = `
Object {
  "Resources": Object {
    "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E": Object {
      "DependsOn": Array [
        "CloudTrailSlackIntegrationEventTransformerLambdaServiceRoleDefaultPolicy5382BB7D",
        "CloudTrailSlackIntegrationEventTransformerLambdaServiceRole9B83CFED",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "0c885446d72e6661a79624064ea7cb9e138800f12ba21b79752c0e899c9fb25a.zip",
        },
        "Description": "Formats CloudTrail API calls sent through EventBridge, and posts them directly to Slack or first to an SQS FIFO queue for deduplication",
        "Environment": Object {
          "Variables": Object {
            "DEDUPLICATE_EVENTS": "false",
            "FRIENDLY_NAMES": "{\\"123456789012\\":\\"example-friendly-name\\"}",
            "SLACK_CHANNEL": "#example-channel",
            "SLACK_WEBHOOK_URL": "https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX",
          },
        },
        "Handler": "main.handler_event_transformer",
        "Role": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationEventTransformerLambdaServiceRole9B83CFED",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CloudTrailSlackIntegrationEventTransformerLambdaLogRetention3FD60AEB": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
              },
            ],
          ],
        },
        "RetentionInDays": 180,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "CloudTrailSlackIntegrationEventTransformerLambdaServiceRole9B83CFED": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudTrailSlackIntegrationEventTransformerLambdaServiceRoleDefaultPolicy5382BB7D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iam:ListAccountAliases",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudTrailSlackIntegrationEventTransformerLambdaServiceRoleDefaultPolicy5382BB7D",
        "Roles": Array [
          Object {
            "Ref": "CloudTrailSlackIntegrationEventTransformerLambdaServiceRole9B83CFED",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudTrailSlackIntegrationRuleForAssumeRole04E292A6": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "AssumeRole",
            ],
            "requestParameters": Object {
              "roleArn": Array [
                "arn:aws:iam::123456789012:role/example-role",
              ],
            },
          },
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudTrailSlackIntegrationRuleForAssumeRoleAllowEventRuleStackCloudTrailSlackIntegrationEventTransformerLambda2063974D45963B23": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationRuleForAssumeRole04E292A6",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CloudTrailSlackIntegrationRuleForRootUserMfaChange09DBDB08": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "EnableMFADevice",
            ],
            "requestParameters": Object {
              "userName": Array [
                "AWS ROOT USER",
              ],
            },
            "userIdentity": Object {
              "type": Array [
                "Root",
              ],
            },
          },
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudTrailSlackIntegrationRuleForRootUserMfaChangeAllowEventRuleStackCloudTrailSlackIntegrationEventTransformerLambda2063974D1C9BFBAF": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationRuleForRootUserMfaChange09DBDB08",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CloudTrailSlackIntegrationRuleForRootUserPasswordChange02856AF9": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "PasswordUpdated",
            ],
            "eventType": Array [
              "AwsConsoleSignIn",
            ],
            "userIdentity": Object {
              "type": Array [
                "Root",
              ],
            },
          },
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudTrailSlackIntegrationRuleForRootUserPasswordChangeAllowEventRuleStackCloudTrailSlackIntegrationEventTransformerLambda2063974DC24B899C": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationRuleForRootUserPasswordChange02856AF9",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CloudTrailSlackIntegrationRuleForRootUserPasswordRecoveryComplete944DA8F9": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "PasswordRecoveryCompleted",
            ],
            "eventType": Array [
              "AwsConsoleSignIn",
            ],
            "responseElements": Object {
              "PasswordRecoveryCompleted": Array [
                "Success",
              ],
            },
            "userIdentity": Object {
              "type": Array [
                "Root",
              ],
            },
          },
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudTrailSlackIntegrationRuleForRootUserPasswordRecoveryCompleteAllowEventRuleStackCloudTrailSlackIntegrationEventTransformerLambda2063974D16A728E1": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationRuleForRootUserPasswordRecoveryComplete944DA8F9",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CloudTrailSlackIntegrationRuleForRootUserPasswordRecoveryRequest4D62C0C3": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "PasswordRecoveryRequested",
            ],
            "eventType": Array [
              "AwsConsoleSignIn",
            ],
            "responseElements": Object {
              "PasswordRecoveryRequested": Array [
                "Success",
              ],
            },
            "userIdentity": Object {
              "type": Array [
                "Root",
              ],
            },
          },
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudTrailSlackIntegrationRuleForRootUserPasswordRecoveryRequestAllowEventRuleStackCloudTrailSlackIntegrationEventTransformerLambda2063974D5454E1A0": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationRuleForRootUserPasswordRecoveryRequest4D62C0C3",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CloudTrailSlackIntegrationRuleForRootUserSuccessfulLoginAllowEventRuleStackCloudTrailSlackIntegrationEventTransformerLambda2063974DDEDC5EC7": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationRuleForRootUserSuccessfulLoginB9122E08",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CloudTrailSlackIntegrationRuleForRootUserSuccessfulLoginB9122E08": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "ConsoleLogin",
            ],
            "eventType": Array [
              "AwsConsoleSignIn",
            ],
            "responseElements": Object {
              "ConsoleLogin": Array [
                "Success",
              ],
            },
            "userIdentity": Object {
              "type": Array [
                "Root",
              ],
            },
          },
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudTrailSlackIntegrationRuleForRootUserUnsuccessfulLoginAllowEventRuleStackCloudTrailSlackIntegrationEventTransformerLambda2063974D1D9D2291": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationRuleForRootUserUnsuccessfulLoginB3DD368C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CloudTrailSlackIntegrationRuleForRootUserUnsuccessfulLoginB3DD368C": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "ConsoleLogin",
            ],
            "eventType": Array [
              "AwsConsoleSignIn",
            ],
            "responseElements": Object {
              "ConsoleLogin": Array [
                "Failure",
              ],
            },
            "userIdentity": Object {
              "type": Array [
                "Root",
              ],
            },
          },
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "6c0316fef24d0df8a9a705c77052001217d864f49af386539d01df54618cd131.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;

exports[`setup new cloudtrail to slack integration with event deduplication 1`] = `
Object {
  "Resources": Object {
    "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E": Object {
      "DependsOn": Array [
        "CloudTrailSlackIntegrationEventTransformerLambdaServiceRoleDefaultPolicy5382BB7D",
        "CloudTrailSlackIntegrationEventTransformerLambdaServiceRole9B83CFED",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "0c885446d72e6661a79624064ea7cb9e138800f12ba21b79752c0e899c9fb25a.zip",
        },
        "Description": "Formats CloudTrail API calls sent through EventBridge, and posts them directly to Slack or first to an SQS FIFO queue for deduplication",
        "Environment": Object {
          "Variables": Object {
            "DEDUPLICATE_EVENTS": "true",
            "FRIENDLY_NAMES": "{}",
            "SLACK_CHANNEL": "#example-channel",
            "SLACK_WEBHOOK_URL": "https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX",
            "SQS_QUEUE_URL": Object {
              "Ref": "CloudTrailSlackIntegrationQueue28060435",
            },
          },
        },
        "Handler": "main.handler_event_transformer",
        "Role": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationEventTransformerLambdaServiceRole9B83CFED",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CloudTrailSlackIntegrationEventTransformerLambdaLogRetention3FD60AEB": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
              },
            ],
          ],
        },
        "RetentionInDays": 180,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "CloudTrailSlackIntegrationEventTransformerLambdaServiceRole9B83CFED": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudTrailSlackIntegrationEventTransformerLambdaServiceRoleDefaultPolicy5382BB7D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iam:ListAccountAliases",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CloudTrailSlackIntegrationQueue28060435",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudTrailSlackIntegrationEventTransformerLambdaServiceRoleDefaultPolicy5382BB7D",
        "Roles": Array [
          Object {
            "Ref": "CloudTrailSlackIntegrationEventTransformerLambdaServiceRole9B83CFED",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudTrailSlackIntegrationQueue28060435": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "FifoQueue": true,
        "QueueName": "CloudTrailSlackIntegrationc84e46f579ec6021ca77656851fd48e3a36ec4aad0.fifo",
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudTrailSlackIntegrationRuleForAssumeRole04E292A6": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "AssumeRole",
            ],
            "requestParameters": Object {
              "roleArn": Array [
                "arn:aws:iam::123456789012:role/example-role",
              ],
            },
          },
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudTrailSlackIntegrationRuleForAssumeRoleAllowEventRuleStackCloudTrailSlackIntegrationEventTransformerLambda2063974D45963B23": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationRuleForAssumeRole04E292A6",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CloudTrailSlackIntegrationRuleForRootUserMfaChange09DBDB08": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "EnableMFADevice",
            ],
            "requestParameters": Object {
              "userName": Array [
                "AWS ROOT USER",
              ],
            },
            "userIdentity": Object {
              "type": Array [
                "Root",
              ],
            },
          },
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudTrailSlackIntegrationRuleForRootUserMfaChangeAllowEventRuleStackCloudTrailSlackIntegrationEventTransformerLambda2063974D1C9BFBAF": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationRuleForRootUserMfaChange09DBDB08",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CloudTrailSlackIntegrationRuleForRootUserPasswordChange02856AF9": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "PasswordUpdated",
            ],
            "eventType": Array [
              "AwsConsoleSignIn",
            ],
            "userIdentity": Object {
              "type": Array [
                "Root",
              ],
            },
          },
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudTrailSlackIntegrationRuleForRootUserPasswordChangeAllowEventRuleStackCloudTrailSlackIntegrationEventTransformerLambda2063974DC24B899C": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationRuleForRootUserPasswordChange02856AF9",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CloudTrailSlackIntegrationRuleForRootUserPasswordRecoveryComplete944DA8F9": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "PasswordRecoveryCompleted",
            ],
            "eventType": Array [
              "AwsConsoleSignIn",
            ],
            "responseElements": Object {
              "PasswordRecoveryCompleted": Array [
                "Success",
              ],
            },
            "userIdentity": Object {
              "type": Array [
                "Root",
              ],
            },
          },
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudTrailSlackIntegrationRuleForRootUserPasswordRecoveryCompleteAllowEventRuleStackCloudTrailSlackIntegrationEventTransformerLambda2063974D16A728E1": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationRuleForRootUserPasswordRecoveryComplete944DA8F9",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CloudTrailSlackIntegrationRuleForRootUserPasswordRecoveryRequest4D62C0C3": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "PasswordRecoveryRequested",
            ],
            "eventType": Array [
              "AwsConsoleSignIn",
            ],
            "responseElements": Object {
              "PasswordRecoveryRequested": Array [
                "Success",
              ],
            },
            "userIdentity": Object {
              "type": Array [
                "Root",
              ],
            },
          },
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudTrailSlackIntegrationRuleForRootUserPasswordRecoveryRequestAllowEventRuleStackCloudTrailSlackIntegrationEventTransformerLambda2063974D5454E1A0": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationRuleForRootUserPasswordRecoveryRequest4D62C0C3",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CloudTrailSlackIntegrationRuleForRootUserSuccessfulLoginAllowEventRuleStackCloudTrailSlackIntegrationEventTransformerLambda2063974DDEDC5EC7": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationRuleForRootUserSuccessfulLoginB9122E08",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CloudTrailSlackIntegrationRuleForRootUserSuccessfulLoginB9122E08": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "ConsoleLogin",
            ],
            "eventType": Array [
              "AwsConsoleSignIn",
            ],
            "responseElements": Object {
              "ConsoleLogin": Array [
                "Success",
              ],
            },
            "userIdentity": Object {
              "type": Array [
                "Root",
              ],
            },
          },
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudTrailSlackIntegrationRuleForRootUserUnsuccessfulLoginAllowEventRuleStackCloudTrailSlackIntegrationEventTransformerLambda2063974D1D9D2291": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationRuleForRootUserUnsuccessfulLoginB3DD368C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CloudTrailSlackIntegrationRuleForRootUserUnsuccessfulLoginB3DD368C": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "ConsoleLogin",
            ],
            "eventType": Array [
              "AwsConsoleSignIn",
            ],
            "responseElements": Object {
              "ConsoleLogin": Array [
                "Failure",
              ],
            },
            "userIdentity": Object {
              "type": Array [
                "Root",
              ],
            },
          },
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudTrailSlackIntegrationSlackForwarderLambda313A2B40": Object {
      "DependsOn": Array [
        "CloudTrailSlackIntegrationSlackForwarderLambdaServiceRoleDefaultPolicy1A9FAB2C",
        "CloudTrailSlackIntegrationSlackForwarderLambdaServiceRoleAFAA799A",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "0c885446d72e6661a79624064ea7cb9e138800f12ba21b79752c0e899c9fb25a.zip",
        },
        "Description": "Polls from an SQS FIFO queue containing formatted CloudTrail API calls and sends them to Slack.",
        "Handler": "main.handler_slack_forwarder",
        "Role": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationSlackForwarderLambdaServiceRoleAFAA799A",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CloudTrailSlackIntegrationSlackForwarderLambdaLogRetention72708236": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "CloudTrailSlackIntegrationSlackForwarderLambda313A2B40",
              },
            ],
          ],
        },
        "RetentionInDays": 14,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "CloudTrailSlackIntegrationSlackForwarderLambdaServiceRoleAFAA799A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudTrailSlackIntegrationSlackForwarderLambdaServiceRoleDefaultPolicy1A9FAB2C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CloudTrailSlackIntegrationQueue28060435",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudTrailSlackIntegrationSlackForwarderLambdaServiceRoleDefaultPolicy1A9FAB2C",
        "Roles": Array [
          Object {
            "Ref": "CloudTrailSlackIntegrationSlackForwarderLambdaServiceRoleAFAA799A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudTrailSlackIntegrationSlackForwarderLambdaSqsEventSourceStackCloudTrailSlackIntegrationQueue877234B7B399CD08": Object {
      "Properties": Object {
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationQueue28060435",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "CloudTrailSlackIntegrationSlackForwarderLambda313A2B40",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "6c0316fef24d0df8a9a705c77052001217d864f49af386539d01df54618cd131.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;

exports[`setup new cloudtrail to slack integration with event deduplication and infrastructure slack alarms 1`] = `
Object {
  "Resources": Object {
    "CloudTrailSlackIntegrationEventTransformerErrorAlarmFC759383": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "Triggers if the Lambda function that transforms CloudTrail API calls received through EventBridge fails (e.g., it fails to process the event)",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "FunctionName",
            "Value": Object {
              "Ref": "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E": Object {
      "DependsOn": Array [
        "CloudTrailSlackIntegrationEventTransformerLambdaServiceRoleDefaultPolicy5382BB7D",
        "CloudTrailSlackIntegrationEventTransformerLambdaServiceRole9B83CFED",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "0c885446d72e6661a79624064ea7cb9e138800f12ba21b79752c0e899c9fb25a.zip",
        },
        "Description": "Formats CloudTrail API calls sent through EventBridge, and posts them directly to Slack or first to an SQS FIFO queue for deduplication",
        "Environment": Object {
          "Variables": Object {
            "DEDUPLICATE_EVENTS": "true",
            "FRIENDLY_NAMES": "{}",
            "SLACK_CHANNEL": "#example-channel",
            "SLACK_WEBHOOK_URL": "https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX",
            "SQS_QUEUE_URL": Object {
              "Ref": "CloudTrailSlackIntegrationQueue28060435",
            },
          },
        },
        "Handler": "main.handler_event_transformer",
        "Role": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationEventTransformerLambdaServiceRole9B83CFED",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CloudTrailSlackIntegrationEventTransformerLambdaLogRetention3FD60AEB": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
              },
            ],
          ],
        },
        "RetentionInDays": 180,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "CloudTrailSlackIntegrationEventTransformerLambdaServiceRole9B83CFED": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudTrailSlackIntegrationEventTransformerLambdaServiceRoleDefaultPolicy5382BB7D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iam:ListAccountAliases",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CloudTrailSlackIntegrationQueue28060435",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudTrailSlackIntegrationEventTransformerLambdaServiceRoleDefaultPolicy5382BB7D",
        "Roles": Array [
          Object {
            "Ref": "CloudTrailSlackIntegrationEventTransformerLambdaServiceRole9B83CFED",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudTrailSlackIntegrationQueue28060435": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "FifoQueue": true,
        "QueueName": "CloudTrailSlackIntegrationc84e46f579ec6021ca77656851fd48e3a36ec4aad0.fifo",
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudTrailSlackIntegrationRuleForAssumeRole04E292A6": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "AssumeRole",
            ],
            "requestParameters": Object {
              "roleArn": Array [
                "arn:aws:iam::123456789012:role/example-role",
              ],
            },
          },
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudTrailSlackIntegrationRuleForAssumeRoleAllowEventRuleStackCloudTrailSlackIntegrationEventTransformerLambda2063974D45963B23": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationRuleForAssumeRole04E292A6",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CloudTrailSlackIntegrationRuleForRootUserMfaChange09DBDB08": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "EnableMFADevice",
            ],
            "requestParameters": Object {
              "userName": Array [
                "AWS ROOT USER",
              ],
            },
            "userIdentity": Object {
              "type": Array [
                "Root",
              ],
            },
          },
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudTrailSlackIntegrationRuleForRootUserMfaChangeAllowEventRuleStackCloudTrailSlackIntegrationEventTransformerLambda2063974D1C9BFBAF": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationRuleForRootUserMfaChange09DBDB08",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CloudTrailSlackIntegrationRuleForRootUserPasswordChange02856AF9": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "PasswordUpdated",
            ],
            "eventType": Array [
              "AwsConsoleSignIn",
            ],
            "userIdentity": Object {
              "type": Array [
                "Root",
              ],
            },
          },
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudTrailSlackIntegrationRuleForRootUserPasswordChangeAllowEventRuleStackCloudTrailSlackIntegrationEventTransformerLambda2063974DC24B899C": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationRuleForRootUserPasswordChange02856AF9",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CloudTrailSlackIntegrationRuleForRootUserPasswordRecoveryComplete944DA8F9": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "PasswordRecoveryCompleted",
            ],
            "eventType": Array [
              "AwsConsoleSignIn",
            ],
            "responseElements": Object {
              "PasswordRecoveryCompleted": Array [
                "Success",
              ],
            },
            "userIdentity": Object {
              "type": Array [
                "Root",
              ],
            },
          },
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudTrailSlackIntegrationRuleForRootUserPasswordRecoveryCompleteAllowEventRuleStackCloudTrailSlackIntegrationEventTransformerLambda2063974D16A728E1": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationRuleForRootUserPasswordRecoveryComplete944DA8F9",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CloudTrailSlackIntegrationRuleForRootUserPasswordRecoveryRequest4D62C0C3": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "PasswordRecoveryRequested",
            ],
            "eventType": Array [
              "AwsConsoleSignIn",
            ],
            "responseElements": Object {
              "PasswordRecoveryRequested": Array [
                "Success",
              ],
            },
            "userIdentity": Object {
              "type": Array [
                "Root",
              ],
            },
          },
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudTrailSlackIntegrationRuleForRootUserPasswordRecoveryRequestAllowEventRuleStackCloudTrailSlackIntegrationEventTransformerLambda2063974D5454E1A0": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationRuleForRootUserPasswordRecoveryRequest4D62C0C3",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CloudTrailSlackIntegrationRuleForRootUserSuccessfulLoginAllowEventRuleStackCloudTrailSlackIntegrationEventTransformerLambda2063974DDEDC5EC7": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationRuleForRootUserSuccessfulLoginB9122E08",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CloudTrailSlackIntegrationRuleForRootUserSuccessfulLoginB9122E08": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "ConsoleLogin",
            ],
            "eventType": Array [
              "AwsConsoleSignIn",
            ],
            "responseElements": Object {
              "ConsoleLogin": Array [
                "Success",
              ],
            },
            "userIdentity": Object {
              "type": Array [
                "Root",
              ],
            },
          },
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudTrailSlackIntegrationRuleForRootUserUnsuccessfulLoginAllowEventRuleStackCloudTrailSlackIntegrationEventTransformerLambda2063974D1D9D2291": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationRuleForRootUserUnsuccessfulLoginB3DD368C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CloudTrailSlackIntegrationRuleForRootUserUnsuccessfulLoginB3DD368C": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "ConsoleLogin",
            ],
            "eventType": Array [
              "AwsConsoleSignIn",
            ],
            "responseElements": Object {
              "ConsoleLogin": Array [
                "Failure",
              ],
            },
            "userIdentity": Object {
              "type": Array [
                "Root",
              ],
            },
          },
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CloudTrailSlackIntegrationEventTransformerLambdaD3A0C95E",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudTrailSlackIntegrationSlackForwarderErrorAlarmA231478E": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "Triggers if the Lambda function that polls from SQS and posts deduplicated CloudTrail API calls received through EventBridge to Slack fails (e.g., invalid Slack webhook URL)",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "FunctionName",
            "Value": Object {
              "Ref": "CloudTrailSlackIntegrationSlackForwarderLambda313A2B40",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "CloudTrailSlackIntegrationSlackForwarderLambda313A2B40": Object {
      "DependsOn": Array [
        "CloudTrailSlackIntegrationSlackForwarderLambdaServiceRoleDefaultPolicy1A9FAB2C",
        "CloudTrailSlackIntegrationSlackForwarderLambdaServiceRoleAFAA799A",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "0c885446d72e6661a79624064ea7cb9e138800f12ba21b79752c0e899c9fb25a.zip",
        },
        "Description": "Polls from an SQS FIFO queue containing formatted CloudTrail API calls and sends them to Slack.",
        "Handler": "main.handler_slack_forwarder",
        "Role": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationSlackForwarderLambdaServiceRoleAFAA799A",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CloudTrailSlackIntegrationSlackForwarderLambdaLogRetention72708236": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "CloudTrailSlackIntegrationSlackForwarderLambda313A2B40",
              },
            ],
          ],
        },
        "RetentionInDays": 14,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "CloudTrailSlackIntegrationSlackForwarderLambdaServiceRoleAFAA799A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudTrailSlackIntegrationSlackForwarderLambdaServiceRoleDefaultPolicy1A9FAB2C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CloudTrailSlackIntegrationQueue28060435",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudTrailSlackIntegrationSlackForwarderLambdaServiceRoleDefaultPolicy1A9FAB2C",
        "Roles": Array [
          Object {
            "Ref": "CloudTrailSlackIntegrationSlackForwarderLambdaServiceRoleAFAA799A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudTrailSlackIntegrationSlackForwarderLambdaSqsEventSourceStackCloudTrailSlackIntegrationQueue877234B7B399CD08": Object {
      "Properties": Object {
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "CloudTrailSlackIntegrationQueue28060435",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "CloudTrailSlackIntegrationSlackForwarderLambda313A2B40",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "6c0316fef24d0df8a9a705c77052001217d864f49af386539d01df54618cd131.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TopicBFC7AF6E": Object {
      "Type": "AWS::SNS::Topic",
    },
  },
}
`;
