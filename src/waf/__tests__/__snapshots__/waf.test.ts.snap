// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`create WAF and associate with ALB 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "LoadBalancer8E47CE52": Object {
      "DependsOn": Array [
        "LoadBalancerAccessLogsBucketPolicy6B02AF07",
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
      ],
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
          Object {
            "Key": "access_logs.s3.enabled",
            "Value": "true",
          },
          Object {
            "Key": "access_logs.s3.bucket",
            "Value": Object {
              "Ref": "LoadBalancerAccessLogsBucketD82011C7",
            },
          },
          Object {
            "Key": "access_logs.s3.prefix",
            "Value": "",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "LoadBalancerSecurityGroupC89CA14B",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          Object {
            "Ref": "VPCPublicSubnet1SubnetB4246D30",
          },
          Object {
            "Ref": "VPCPublicSubnet2Subnet74179F39",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "LoadBalancerAccessLogsBucketD82011C7": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "ExpirationInDays": 30,
              "Status": "Enabled",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "LoadBalancerAccessLogsBucketPolicy6B02AF07": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "LoadBalancerAccessLogsBucketD82011C7",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::127311923021:root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "LoadBalancerAccessLogsBucketD82011C7",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "StringEquals": Object {
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "LoadBalancerAccessLogsBucketD82011C7",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "LoadBalancerAccessLogsBucketD82011C7",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "LoadBalancerDefaultTargetGroup162BFC2A": Object {
      "Properties": Object {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": Array [
          Object {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "instance",
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "LoadBalancerHttpListener9DD37EAA": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "RedirectConfig": Object {
              "Port": "443",
              "Protocol": "HTTPS",
              "StatusCode": "HTTP_301",
            },
            "Type": "redirect",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "LoadBalancer8E47CE52",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LoadBalancerHttpsListener68D81C94": Object {
      "Properties": Object {
        "Certificates": Array [
          Object {
            "CertificateArn": "arn:aws:acm:us-east-1:123456789012:certificate/test",
          },
        ],
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "LoadBalancerDefaultTargetGroup162BFC2A",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "LoadBalancer8E47CE52",
        },
        "Port": 443,
        "Protocol": "HTTPS",
        "SslPolicy": "ELBSecurityPolicy-TLS-1-2-2017-01",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LoadBalancerSecurityGroupC89CA14B": Object {
      "Properties": Object {
        "GroupDescription": "Automatically created Security Group for ELB StackLoadBalancerF0AF61AA",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "TestWafAssociationD84E01FA": Object {
      "Properties": Object {
        "ResourceArn": Object {
          "Ref": "LoadBalancer8E47CE52",
        },
        "WebACLArn": Object {
          "Fn::GetAtt": Array [
            "TestWafWebACL78812FD0",
            "Arn",
          ],
        },
      },
      "Type": "AWS::WAFv2::WebACLAssociation",
    },
    "TestWafWebACL78812FD0": Object {
      "Properties": Object {
        "DefaultAction": Object {
          "Allow": Object {},
        },
        "Name": "ALBWebACL",
        "Rules": Array [
          Object {
            "Name": "ManagedRule-AWSManagedRulesCommonRuleSet",
            "OverrideAction": Object {
              "None": Object {},
            },
            "Priority": 10,
            "Statement": Object {
              "ManagedRuleGroupStatement": Object {
                "Name": "AWSManagedRulesCommonRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "CoreRuleSet",
              "SampledRequestsEnabled": true,
            },
          },
        ],
        "Scope": "REGIONAL",
        "VisibilityConfig": Object {
          "CloudWatchMetricsEnabled": true,
          "MetricName": "ALBWebACL",
          "SampledRequestsEnabled": true,
        },
      },
      "Type": "AWS::WAFv2::WebACL",
    },
    "VPCB9E5F0B4": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Stack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Stack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Stack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "Stack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet2NATGateway3C070193",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Stack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "Stack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet1EIP6AD938E8": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Stack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet1NATGatewayE0556630": Object {
      "DependsOn": Array [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Stack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet1RouteTableFEE4B781": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Stack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet1SubnetB4246D30": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "Stack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet2EIP4947BC00": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Stack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet2NATGateway3C070193": Object {
      "DependsOn": Array [
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Stack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Stack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet2Subnet74179F39": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "Stack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCVPCGW99B986DC": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`create WAF for CloudFront 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "TestWafWebACL78812FD0": Object {
      "Properties": Object {
        "DefaultAction": Object {
          "Allow": Object {},
        },
        "Name": "CloudFrontWebACL",
        "Rules": Array [
          Object {
            "Name": "ManagedRule-AWSManagedRulesCommonRuleSet",
            "OverrideAction": Object {
              "None": Object {},
            },
            "Priority": 10,
            "Statement": Object {
              "ManagedRuleGroupStatement": Object {
                "Name": "AWSManagedRulesCommonRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "CoreRuleSet",
              "SampledRequestsEnabled": true,
            },
          },
        ],
        "Scope": "CLOUDFRONT",
        "VisibilityConfig": Object {
          "CloudWatchMetricsEnabled": true,
          "MetricName": "CloudFrontWebACL",
          "SampledRequestsEnabled": true,
        },
      },
      "Type": "AWS::WAFv2::WebACL",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`create WAF with CloudWatch alarms 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "TestWafAllowedRequestsAlarm8E602A7C": Object {
      "Properties": Object {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "Region",
            "Value": Object {
              "Ref": "AWS::Region",
            },
          },
          Object {
            "Name": "Rule",
            "Value": "ALL",
          },
          Object {
            "Name": "WebACL",
            "Value": "AlarmedWebACL",
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "AllowedRequests",
        "Namespace": "AWS/WAFV2",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 10000,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "TestWafBlockedRequestsAlarm62DCF010": Object {
      "Properties": Object {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 2,
        "Dimensions": Array [
          Object {
            "Name": "Region",
            "Value": Object {
              "Ref": "AWS::Region",
            },
          },
          Object {
            "Name": "Rule",
            "Value": "ALL",
          },
          Object {
            "Name": "WebACL",
            "Value": "AlarmedWebACL",
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "BlockedRequests",
        "Namespace": "AWS/WAFV2",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 100,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "TestWafWebACL78812FD0": Object {
      "Properties": Object {
        "DefaultAction": Object {
          "Allow": Object {},
        },
        "Name": "AlarmedWebACL",
        "Rules": Array [],
        "Scope": "REGIONAL",
        "VisibilityConfig": Object {
          "CloudWatchMetricsEnabled": true,
          "MetricName": "AlarmedWebACL",
          "SampledRequestsEnabled": true,
        },
      },
      "Type": "AWS::WAFv2::WebACL",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`create WAF with both managed and custom rules 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "TestWafWebACL78812FD0": Object {
      "Properties": Object {
        "DefaultAction": Object {
          "Allow": Object {},
        },
        "Name": "MixedRulesWebACL",
        "Rules": Array [
          Object {
            "Action": Object {
              "Block": Object {},
            },
            "Name": "BlockPath--api-internal",
            "Priority": 1,
            "Statement": Object {
              "ByteMatchStatement": Object {
                "FieldToMatch": Object {
                  "UriPath": Object {},
                },
                "PositionalConstraint": "STARTS_WITH",
                "SearchString": "/api/internal",
                "TextTransformations": Array [
                  Object {
                    "Priority": 0,
                    "Type": "NONE",
                  },
                ],
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "BlockPath--api-internal",
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Action": Object {
              "Captcha": Object {},
            },
            "Name": "RateLimit-1000",
            "Priority": 5,
            "Statement": Object {
              "RateBasedStatement": Object {
                "AggregateKeyType": "FORWARDED_IP",
                "Limit": 1000,
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "RateLimit-1000",
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Name": "ManagedRule-AWSManagedRulesCommonRuleSet",
            "OverrideAction": Object {
              "None": Object {},
            },
            "Priority": 100,
            "Statement": Object {
              "ManagedRuleGroupStatement": Object {
                "Name": "AWSManagedRulesCommonRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "CoreRuleSet",
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Name": "ManagedRule-AWSManagedRulesBotControlRuleSet",
            "OverrideAction": Object {
              "None": Object {},
            },
            "Priority": 110,
            "Statement": Object {
              "ManagedRuleGroupStatement": Object {
                "ExcludedRules": Array [
                  Object {
                    "Name": "SignalNonBrowserUserAgent",
                  },
                ],
                "Name": "AWSManagedRulesBotControlRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "BotControl",
              "SampledRequestsEnabled": true,
            },
          },
        ],
        "Scope": "REGIONAL",
        "VisibilityConfig": Object {
          "CloudWatchMetricsEnabled": true,
          "MetricName": "MixedRulesWebACL",
          "SampledRequestsEnabled": true,
        },
      },
      "Type": "AWS::WAFv2::WebACL",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`create WAF with custom response bodies 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "TestWafWebACL78812FD0": Object {
      "Properties": Object {
        "CustomResponseBodies": Object {
          "BlockedResponse": Object {
            "Content": "<html><body><h1>Access Denied</h1></body></html>",
            "ContentType": "TEXT_HTML",
          },
          "RateLimitResponse": Object {
            "Content": "{\\"error\\":\\"Too many requests\\"}",
            "ContentType": "APPLICATION_JSON",
          },
        },
        "DefaultAction": Object {
          "Allow": Object {},
        },
        "Name": "CustomResponseWebACL",
        "Rules": Array [],
        "Scope": "REGIONAL",
        "VisibilityConfig": Object {
          "CloudWatchMetricsEnabled": true,
          "MetricName": "CustomResponseWebACL",
          "SampledRequestsEnabled": true,
        },
      },
      "Type": "AWS::WAFv2::WebACL",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`create WAF with custom rules 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AllowedIPsIPSetE3D7DE84": Object {
      "Properties": Object {
        "Addresses": Array [
          "192.168.1.0/24",
          "10.0.0.0/8",
        ],
        "Description": "Allowed IP addresses",
        "IPAddressVersion": "IPV4",
        "Scope": "REGIONAL",
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "TestWafWebACL78812FD0": Object {
      "Properties": Object {
        "DefaultAction": Object {
          "Block": Object {},
        },
        "Name": "CustomRulesWebACL",
        "Rules": Array [
          Object {
            "Action": Object {
              "Block": Object {},
            },
            "Name": "BlockPath--admin",
            "Priority": 1,
            "Statement": Object {
              "ByteMatchStatement": Object {
                "FieldToMatch": Object {
                  "UriPath": Object {},
                },
                "PositionalConstraint": "STARTS_WITH",
                "SearchString": "/admin",
                "TextTransformations": Array [
                  Object {
                    "Priority": 0,
                    "Type": "NONE",
                  },
                ],
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "BlockPath--admin",
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Action": Object {
              "Block": Object {},
            },
            "Name": "BlockPath--wp-admin",
            "Priority": 2,
            "Statement": Object {
              "ByteMatchStatement": Object {
                "FieldToMatch": Object {
                  "UriPath": Object {},
                },
                "PositionalConstraint": "STARTS_WITH",
                "SearchString": "/wp-admin",
                "TextTransformations": Array [
                  Object {
                    "Priority": 0,
                    "Type": "NONE",
                  },
                ],
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "BlockPath--wp-admin",
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Action": Object {
              "Allow": Object {},
            },
            "Name": "AllowPath--public",
            "Priority": 3,
            "Statement": Object {
              "ByteMatchStatement": Object {
                "FieldToMatch": Object {
                  "UriPath": Object {},
                },
                "PositionalConstraint": "STARTS_WITH",
                "SearchString": "/public",
                "TextTransformations": Array [
                  Object {
                    "Priority": 0,
                    "Type": "NONE",
                  },
                ],
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AllowPath--public",
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Action": Object {
              "Block": Object {},
            },
            "Name": "RateLimit-2000",
            "Priority": 5,
            "Statement": Object {
              "RateBasedStatement": Object {
                "AggregateKeyType": "IP",
                "Limit": 2000,
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "RateLimit-2000",
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Action": Object {
              "Block": Object {},
            },
            "Name": "GeoRestriction-CN-RU-KP",
            "Priority": 10,
            "Statement": Object {
              "GeoMatchStatement": Object {
                "CountryCodes": Array [
                  "CN",
                  "RU",
                  "KP",
                ],
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "GeoRestriction",
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Action": Object {
              "Allow": Object {},
            },
            "Name": "IPAllowlist",
            "Priority": 15,
            "Statement": Object {
              "IPSetReferenceStatement": Object {
                "Arn": Object {
                  "Fn::GetAtt": Array [
                    "AllowedIPsIPSetE3D7DE84",
                    "Arn",
                  ],
                },
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "IPAllowlist",
              "SampledRequestsEnabled": true,
            },
          },
        ],
        "Scope": "REGIONAL",
        "VisibilityConfig": Object {
          "CloudWatchMetricsEnabled": true,
          "MetricName": "CustomRulesWebACL",
          "SampledRequestsEnabled": true,
        },
      },
      "Type": "AWS::WAFv2::WebACL",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`create WAF with logging enabled 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "TestWafFirehoseRole5435522A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "TestWafFirehoseRoleDefaultPolicy9C61963B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "TestWafLogBucket478886EF",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "TestWafLogBucket478886EF",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestWafFirehoseRoleDefaultPolicy9C61963B",
        "Roles": Array [
          Object {
            "Ref": "TestWafFirehoseRole5435522A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestWafLogBucket478886EF": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "ExpirationInDays": 90,
              "Status": "Enabled",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "TestWafLogDeliveryStream03772872": Object {
      "Properties": Object {
        "DeliveryStreamType": "DirectPut",
        "S3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "TestWafLogBucket478886EF",
              "Arn",
            ],
          },
          "CompressionFormat": "GZIP",
          "ErrorOutputPrefix": "error/",
          "Prefix": "waf-logs/",
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "TestWafFirehoseRole5435522A",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "TestWafLogGroupDA38FA78": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "RetentionInDays": 14,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "TestWafLoggingConfiguration08359FA1": Object {
      "Properties": Object {
        "LogDestinationConfigs": Array [
          Object {
            "Fn::GetAtt": Array [
              "TestWafLogDeliveryStream03772872",
              "Arn",
            ],
          },
        ],
        "ResourceArn": Object {
          "Fn::GetAtt": Array [
            "TestWafWebACL78812FD0",
            "Arn",
          ],
        },
      },
      "Type": "AWS::WAFv2::LoggingConfiguration",
    },
    "TestWafWebACL78812FD0": Object {
      "Properties": Object {
        "DefaultAction": Object {
          "Allow": Object {},
        },
        "Name": "LoggingEnabledWebACL",
        "Rules": Array [],
        "Scope": "REGIONAL",
        "VisibilityConfig": Object {
          "CloudWatchMetricsEnabled": true,
          "MetricName": "LoggingEnabledWebACL",
          "SampledRequestsEnabled": true,
        },
      },
      "Type": "AWS::WAFv2::WebACL",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`create WAF with managed rule groups 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "TestWafWebACL78812FD0": Object {
      "Properties": Object {
        "DefaultAction": Object {
          "Allow": Object {},
        },
        "Description": "Test Web ACL with managed rules",
        "Name": "MyWebACL",
        "Rules": Array [
          Object {
            "Name": "ManagedRule-AWSManagedRulesCommonRuleSet",
            "OverrideAction": Object {
              "None": Object {},
            },
            "Priority": 10,
            "Statement": Object {
              "ManagedRuleGroupStatement": Object {
                "Name": "AWSManagedRulesCommonRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "CoreRuleSet",
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Name": "ManagedRule-AWSManagedRulesKnownBadInputsRuleSet",
            "OverrideAction": Object {
              "None": Object {},
            },
            "Priority": 20,
            "Statement": Object {
              "ManagedRuleGroupStatement": Object {
                "Name": "AWSManagedRulesKnownBadInputsRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "KnownBadInputs",
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Name": "ManagedRule-AWSManagedRulesSQLiRuleSet",
            "OverrideAction": Object {
              "None": Object {},
            },
            "Priority": 30,
            "Statement": Object {
              "ManagedRuleGroupStatement": Object {
                "Name": "AWSManagedRulesSQLiRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "SQLDatabase",
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Name": "ManagedRule-AWSManagedRulesBotControlRuleSet",
            "OverrideAction": Object {
              "Count": Object {},
            },
            "Priority": 40,
            "Statement": Object {
              "ManagedRuleGroupStatement": Object {
                "Name": "AWSManagedRulesBotControlRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "ManagedRule-AWSManagedRulesBotControlRuleSet",
              "SampledRequestsEnabled": true,
            },
          },
        ],
        "Scope": "REGIONAL",
        "VisibilityConfig": Object {
          "CloudWatchMetricsEnabled": true,
          "MetricName": "MyWebACL",
          "SampledRequestsEnabled": true,
        },
      },
      "Type": "AWS::WAFv2::WebACL",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`create WAF with metrics disabled 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "TestWafWebACL78812FD0": Object {
      "Properties": Object {
        "DefaultAction": Object {
          "Allow": Object {},
        },
        "Name": "NoMetricsWebACL",
        "Rules": Array [],
        "Scope": "REGIONAL",
        "VisibilityConfig": Object {
          "CloudWatchMetricsEnabled": false,
          "MetricName": "NoMetricsWebACL",
          "SampledRequestsEnabled": true,
        },
      },
      "Type": "AWS::WAFv2::WebACL",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`create WAF with regex pattern set 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "BadPatternsRegexPatternSetA88B0AA8": Object {
      "Properties": Object {
        "Description": "Patterns to block",
        "RegularExpressionList": Array [
          "[sS][qQ][lL].*[iI][nN][jJ][eE][cC][tT]",
          "<script.*>",
        ],
        "Scope": "REGIONAL",
      },
      "Type": "AWS::WAFv2::RegexPatternSet",
    },
    "TestWafWebACL78812FD0": Object {
      "Properties": Object {
        "DefaultAction": Object {
          "Allow": Object {},
        },
        "Name": "RegexWebACL",
        "Rules": Array [
          Object {
            "Action": Object {
              "Block": Object {},
            },
            "Name": "RegexMatch",
            "Priority": 1,
            "Statement": Object {
              "RegexPatternSetReferenceStatement": Object {
                "Arn": Object {
                  "Fn::GetAtt": Array [
                    "BadPatternsRegexPatternSetA88B0AA8",
                    "Arn",
                  ],
                },
                "FieldToMatch": Object {
                  "AllQueryArguments": Object {},
                },
                "TextTransformations": Array [
                  Object {
                    "Priority": 0,
                    "Type": "NONE",
                  },
                ],
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "RegexMatch",
              "SampledRequestsEnabled": true,
            },
          },
        ],
        "Scope": "REGIONAL",
        "VisibilityConfig": Object {
          "CloudWatchMetricsEnabled": true,
          "MetricName": "RegexWebACL",
          "SampledRequestsEnabled": true,
        },
      },
      "Type": "AWS::WAFv2::WebACL",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`create WAF with size constraint rule 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "TestWafWebACL78812FD0": Object {
      "Properties": Object {
        "DefaultAction": Object {
          "Allow": Object {},
        },
        "Name": "SizeConstraintWebACL",
        "Rules": Array [
          Object {
            "Action": Object {
              "Block": Object {},
            },
            "Name": "SizeConstraint-GT-8192",
            "Priority": 1,
            "Statement": Object {
              "SizeConstraintStatement": Object {
                "ComparisonOperator": "GT",
                "FieldToMatch": Object {
                  "Body": Object {},
                },
                "Size": 8192,
                "TextTransformations": Array [
                  Object {
                    "Priority": 0,
                    "Type": "NONE",
                  },
                ],
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "SizeConstraint-GT-8192",
              "SampledRequestsEnabled": true,
            },
          },
        ],
        "Scope": "REGIONAL",
        "VisibilityConfig": Object {
          "CloudWatchMetricsEnabled": true,
          "MetricName": "SizeConstraintWebACL",
          "SampledRequestsEnabled": true,
        },
      },
      "Type": "AWS::WAFv2::WebACL",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`create basic WAF with default settings 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "TestWafWebACL78812FD0": Object {
      "Properties": Object {
        "DefaultAction": Object {
          "Allow": Object {},
        },
        "Rules": Array [],
        "Scope": "REGIONAL",
        "VisibilityConfig": Object {
          "CloudWatchMetricsEnabled": true,
          "MetricName": "WAF-c8f65d81261c4eb852749729cf4254bfa6199c8050",
          "SampledRequestsEnabled": true,
        },
      },
      "Type": "AWS::WAFv2::WebACL",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
