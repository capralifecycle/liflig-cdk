// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LifligCdkDeployerDeps 1`] = `
Object {
  "Resources": Object {
    "LifligCdkDeployerDepsCdkRole003F371C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::112233445566:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": "liflig-cdk-deployer-cdk",
      },
      "Type": "AWS::IAM::Role",
    },
    "LifligCdkDeployerDepsCdkRoleDefaultPolicy488FB662": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:aws:iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/*-deploy-role-*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:aws:iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/*-publishing-role-*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LifligCdkDeployerDepsCdkRoleDefaultPolicy488FB662",
        "Roles": Array [
          Object {
            "Ref": "LifligCdkDeployerDepsCdkRole003F371C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;

exports[`Pipeline 1`] = `
Object {
  "Parameters": Object {
    "SsmParameterValueccasglobalbuildC96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/ccas/global/build",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueccasglobalkeyC96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/ccas/global/key",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "PipelineArtefactBucketTriggerFA12D176": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "CompleteMultipartUpload",
              "CopyObject",
              "PutObject",
            ],
            "requestParameters": Object {
              "bucketName": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "artefact.eu-west-1.",
                      Object {
                        "Ref": "SsmParameterValueccasglobalbuildC96584B6F00A464EAD1953AFF4B05118Parameter",
                      },
                    ],
                  ],
                },
              ],
              "key": Array [
                "pipelines/dev-something/trigger",
              ],
            },
            "resources": Object {
              "ARN": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::artefact.eu-west-1.",
                      Object {
                        "Ref": "SsmParameterValueccasglobalbuildC96584B6F00A464EAD1953AFF4B05118Parameter",
                      },
                      "/pipelines/dev-something/trigger",
                    ],
                  ],
                },
              ],
            },
          },
          "detail-type": Array [
            "AWS API Call via CloudTrail",
          ],
          "source": Array [
            "aws.s3",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "PipelineStateMachine1814BD05",
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "PipelineStateMachineEventsRole5EB2FA4B",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "PipelineCheckCanRunPolicyF496344F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "states:ListExecutions",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "PipelineStateMachine1814BD05",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PipelineCheckCanRunPolicyF496344F",
        "Roles": Array [
          Object {
            "Ref": "SingletonLambda30ad3abbf7744804a6ef2c2f4a247362ServiceRole6FD87E48",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PipelineStateMachine1814BD05": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "PipelineStateMachineRoleDefaultPolicy24D0EC77",
        "PipelineStateMachineRole61BEBDFF",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"StartAt\\":\\"Check if the process can run\\",\\"States\\":{\\"Check if the process can run\\":{\\"Next\\":\\"Can run?\\",\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ClientExecutionTimeoutException\\",\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2}],\\"Type\\":\\"Task\\",\\"OutputPath\\":\\"$.Payload\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke\\",\\"Parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "SingletonLambda30ad3abbf7744804a6ef2c2f4a2473624B500B6F",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":{\\"stateMachineId.$\\":\\"$$.StateMachine.Id\\",\\"executionId.$\\":\\"$$.Execution.Id\\"}}},\\"Wait before rechecking status\\":{\\"Type\\":\\"Wait\\",\\"Seconds\\":15,\\"Next\\":\\"Check if the process can run\\"},\\"Can run?\\":{\\"Type\\":\\"Choice\\",\\"Choices\\":[{\\"Variable\\":\\"$.CanRunState\\",\\"StringEquals\\":\\"CONTINUE\\",\\"Next\\":\\"Collect files from S3\\"},{\\"Variable\\":\\"$.CanRunState\\",\\"StringEquals\\":\\"SKIP\\",\\"Next\\":\\"Skip\\"}],\\"Default\\":\\"Wait before rechecking status\\"},\\"Collect files from S3\\":{\\"Next\\":\\"Check if dev has stacks\\",\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ClientExecutionTimeoutException\\",\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2}],\\"Type\\":\\"Task\\",\\"OutputPath\\":\\"$.Payload\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke\\",\\"Parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "SingletonLambdac49cbfe150e047218964fb20f4e5a7ad32DEE37F",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":{\\"bucketName\\":\\"artefact.eu-west-1.",
              Object {
                "Ref": "SsmParameterValueccasglobalbuildC96584B6F00A464EAD1953AFF4B05118Parameter",
              },
              "\\",\\"bucketPrefix\\":\\"pipelines/dev-something/\\",\\"envNames\\":[\\"dev\\"]}}},\\"Check if dev has stacks\\":{\\"Type\\":\\"Choice\\",\\"Choices\\":[{\\"Or\\":[{\\"Variable\\":\\"$.StackCountPerEnv.dev\\",\\"IsNull\\":true},{\\"Variable\\":\\"$.StackCountPerEnv.dev\\",\\"NumericEquals\\":0}],\\"Next\\":\\"Skip dev\\"}],\\"Default\\":\\"Deploy dev\\"},\\"Deploy dev\\":{\\"End\\":true,\\"Type\\":\\"Task\\",\\"ResultPath\\":null,\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::ecs:runTask.sync\\",\\"Parameters\\":{\\"Cluster\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "pipeline04ad36b1cluster6BE51DCA",
                  "Arn",
                ],
              },
              "\\",\\"TaskDefinition\\":\\"StackPipelinedevTaskDefinitionA1B33879\\",\\"NetworkConfiguration\\":{\\"AwsvpcConfiguration\\":{\\"AssignPublicIp\\":\\"ENABLED\\",\\"Subnets\\":[\\"",
              Object {
                "Fn::ImportValue": "SupportStack:ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456",
              },
              "\\",\\"",
              Object {
                "Fn::ImportValue": "SupportStack:ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740",
              },
              "\\"],\\"SecurityGroups\\":[\\"",
              Object {
                "Fn::GetAtt": Array [
                  "pipeline04ad36b1securitygroup5E09A6B3",
                  "GroupId",
                ],
              },
              "\\"]}},\\"Overrides\\":{\\"ContainerOverrides\\":[{\\"Name\\":\\"app\\",\\"Environment\\":[{\\"Name\\":\\"CDK_TARGET_ROLE_ARN\\",\\"Value\\":\\"arn:aws:iam::112233445566:role/liflig-cdk-deployer-cdk\\"},{\\"Name\\":\\"CDK_ENV_NAME\\",\\"Value\\":\\"dev\\"},{\\"Name\\":\\"CDK_CLOUD_ASSEMBLY\\",\\"Value.$\\":\\"$.CloudAssembly\\"},{\\"Name\\":\\"CDK_VARIABLES\\",\\"Value.$\\":\\"$.Variables\\"}]}]},\\"LaunchType\\":\\"FARGATE\\"}},\\"Skip dev\\":{\\"Type\\":\\"Pass\\",\\"End\\":true},\\"Skip\\":{\\"Type\\":\\"Succeed\\"}},\\"TimeoutSeconds\\":10800}",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "PipelineStateMachineRole61BEBDFF",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "PipelineStateMachineEventsRole5EB2FA4B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "PipelineStateMachineEventsRoleDefaultPolicyBFB99F23": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "PipelineStateMachine1814BD05",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PipelineStateMachineEventsRoleDefaultPolicyBFB99F23",
        "Roles": Array [
          Object {
            "Ref": "PipelineStateMachineEventsRole5EB2FA4B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PipelineStateMachineRole61BEBDFF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "states.eu-west-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "PipelineStateMachineRoleDefaultPolicy24D0EC77": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambda30ad3abbf7744804a6ef2c2f4a2473624B500B6F",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambda30ad3abbf7744804a6ef2c2f4a2473624B500B6F",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdac49cbfe150e047218964fb20f4e5a7ad32DEE37F",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdac49cbfe150e047218964fb20f4e5a7ad32DEE37F",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "ecs:RunTask",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Fn::Select": Array [
                        1,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "PipelinedevTaskDefinition33E76EBD",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        2,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "PipelinedevTaskDefinition33E76EBD",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        3,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "PipelinedevTaskDefinition33E76EBD",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        4,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "PipelinedevTaskDefinition33E76EBD",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        0,
                        Object {
                          "Fn::Split": Array [
                            "/",
                            Object {
                              "Fn::Select": Array [
                                5,
                                Object {
                                  "Fn::Split": Array [
                                    ":",
                                    Object {
                                      "Ref": "PipelinedevTaskDefinition33E76EBD",
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    "/",
                    Object {
                      "Fn::Select": Array [
                        1,
                        Object {
                          "Fn::Split": Array [
                            "/",
                            Object {
                              "Fn::Select": Array [
                                5,
                                Object {
                                  "Fn::Split": Array [
                                    ":",
                                    Object {
                                      "Ref": "PipelinedevTaskDefinition33E76EBD",
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ecs:StopTask",
                "ecs:DescribeTasks",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "PipelinedevTaskDefinitionTaskRole631DEEE3",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "PipelinedevTaskDefinitionExecutionRole9E269E64",
                    "Arn",
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "events:PutTargets",
                "events:PutRule",
                "events:DescribeRule",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":events:eu-west-1:",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":rule/StepFunctionsGetEventsForECSTaskRule",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PipelineStateMachineRoleDefaultPolicy24D0EC77",
        "Roles": Array [
          Object {
            "Ref": "PipelineStateMachineRole61BEBDFF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PipelinedevLogGroupBE724408": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "PipelinedevTaskDefinition33E76EBD": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "001112238813.dkr.ecr.eu-west-1.",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/incub-common-liflig-cdk-deployer:1-experimental.2",
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "PipelinedevLogGroupBE724408",
                },
                "awslogs-region": "eu-west-1",
                "awslogs-stream-prefix": "app",
              },
            },
            "Name": "app",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "PipelinedevTaskDefinitionExecutionRole9E269E64",
            "Arn",
          ],
        },
        "Family": "StackPipelinedevTaskDefinitionA1B33879",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "PipelinedevTaskDefinitionTaskRole631DEEE3",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "PipelinedevTaskDefinitionExecutionRole9E269E64": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:id",
            "Value": "Stack_c8ce3833a4ef23fd9d20ec9fe5e254ba3d0e8fcff3",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "PipelinedevTaskDefinitionExecutionRoleDefaultPolicyFE463A0E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:ecr:eu-west-1:001112238813:repository/incub-common-liflig-cdk-deployer",
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "PipelinedevLogGroupBE724408",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PipelinedevTaskDefinitionExecutionRoleDefaultPolicyFE463A0E",
        "Roles": Array [
          Object {
            "Ref": "PipelinedevTaskDefinitionExecutionRole9E269E64",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PipelinedevTaskDefinitionTaskRole631DEEE3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "PipelinedevTaskDefinitionTaskRoleDefaultPolicyDFCECB39": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::112233445566:role/liflig-cdk-deployer-cdk",
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::artefact.eu-west-1.",
                      Object {
                        "Ref": "SsmParameterValueccasglobalbuildC96584B6F00A464EAD1953AFF4B05118Parameter",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::artefact.eu-west-1.",
                      Object {
                        "Ref": "SsmParameterValueccasglobalbuildC96584B6F00A464EAD1953AFF4B05118Parameter",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:eu-west-1:",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":key/",
                    Object {
                      "Ref": "SsmParameterValueccasglobalkeyC96584B6F00A464EAD1953AFF4B05118Parameter",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PipelinedevTaskDefinitionTaskRoleDefaultPolicyDFCECB39",
        "Roles": Array [
          Object {
            "Ref": "PipelinedevTaskDefinitionTaskRole631DEEE3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SingletonLambda30ad3abbf7744804a6ef2c2f4a2473624B500B6F": Object {
      "DependsOn": Array [
        "SingletonLambda30ad3abbf7744804a6ef2c2f4a247362ServiceRole6FD87E48",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "exports.handler = async (event) => {
    // eslint-disable-next-line @typescript-eslint/no-var-requires,@typescript-eslint/no-unsafe-assignment
    const AWS = require(\\"aws-sdk\\");
    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access
    const sf = new AWS.StepFunctions();
    console.log(\\"Event received: \\", event);
    const stateMachineArn = event[\\"stateMachineId\\"];
    const currentExecutionArn = event[\\"executionId\\"];
    const executions = (await sf
        .listExecutions({
        stateMachineArn,
        statusFilter: \\"RUNNING\\",
    })
        .promise()).executions;
    console.log(\\"Executions: \\", executions);
    const currentExecution = executions.find((it) => it.executionArn == currentExecutionArn);
    if (!currentExecution) {
        throw new Error(\\"Could not find current execution\\");
    }
    const newer = executions.filter((it) => it.startDate > currentExecution.startDate).length;
    return {
        CanRunState: newer > 0 ? \\"SKIP\\" : executions.length == 1 ? \\"CONTINUE\\" : \\"WAIT\\",
    };
};",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "SingletonLambda30ad3abbf7744804a6ef2c2f4a247362ServiceRole6FD87E48",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 10,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SingletonLambda30ad3abbf7744804a6ef2c2f4a247362ServiceRole6FD87E48": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SingletonLambdac49cbfe150e047218964fb20f4e5a7ad32DEE37F": Object {
      "DependsOn": Array [
        "SingletonLambdac49cbfe150e047218964fb20f4e5a7adServiceRoleDefaultPolicy4E6107E2",
        "SingletonLambdac49cbfe150e047218964fb20f4e5a7adServiceRole836D5886",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "exports.handler = async (event) => {
    var _a;
    // eslint-disable-next-line @typescript-eslint/no-var-requires,@typescript-eslint/no-unsafe-assignment
    const AWS = require(\\"aws-sdk\\");
    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access
    const s3 = new AWS.S3();
    console.log(\\"Event received: \\", event);
    const bucketName = event.bucketName;
    const bucketPrefix = event.bucketPrefix;
    const envNames = event.envNames;
    if (bucketPrefix.slice(-1) !== \\"/\\") {
        throw new Error(\`Expected bucket prefix to end with '/' but its value is '\${bucketPrefix}'\`);
    }
    const files = await s3
        .listObjectsV2({
        Bucket: bucketName,
        Prefix: bucketPrefix,
    })
        .promise();
    async function getData(key) {
        const result = await s3
            .getObject({
            Bucket: bucketName,
            Key: key,
        })
            .promise();
        // eslint-disable-next-line @typescript-eslint/no-base-to-string
        return result.Body.toString();
    }
    let cloudAssembly = null;
    let variables = {};
    for (const file of (_a = files.Contents) !== null && _a !== void 0 ? _a : []) {
        const key = file.Key;
        const filename = key.slice(bucketPrefix.length);
        console.log(\`File: \${filename}\`);
        if (filename === \\"cloud-assembly.json\\") {
            console.log(\\"Found Cloud Assembly\\");
            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
            cloudAssembly = JSON.parse(await getData(key));
        }
        else if (/^variables.*\\\\.json$/.test(filename)) {
            console.log(\\"Found variables file\\");
            variables = {
                ...variables,
                ...JSON.parse(await getData(key)),
            };
        }
        else {
            console.log(\\"Ignoring unknown file\\");
        }
    }
    if (cloudAssembly === null) {
        throw new Error(\\"cloud-assembly.json not found\\");
    }
    return {
        CloudAssembly: JSON.stringify(cloudAssembly),
        Variables: JSON.stringify(variables),
        StackCountPerEnv: Object.fromEntries(envNames.map((name) => {
            var _a, _b;
            return [
                name,
                (_b = (_a = cloudAssembly.environments.find((it) => it.name === name)) === null || _a === void 0 ? void 0 : _a.stackNames.length) !== null && _b !== void 0 ? _b : 0,
            ];
        })),
    };
};",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "SingletonLambdac49cbfe150e047218964fb20f4e5a7adServiceRole836D5886",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SingletonLambdac49cbfe150e047218964fb20f4e5a7adServiceRole836D5886": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SingletonLambdac49cbfe150e047218964fb20f4e5a7adServiceRoleDefaultPolicy4E6107E2": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::artefact.eu-west-1.",
                      Object {
                        "Ref": "SsmParameterValueccasglobalbuildC96584B6F00A464EAD1953AFF4B05118Parameter",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::artefact.eu-west-1.",
                      Object {
                        "Ref": "SsmParameterValueccasglobalbuildC96584B6F00A464EAD1953AFF4B05118Parameter",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:eu-west-1:",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":key/",
                    Object {
                      "Ref": "SsmParameterValueccasglobalkeyC96584B6F00A464EAD1953AFF4B05118Parameter",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SingletonLambdac49cbfe150e047218964fb20f4e5a7adServiceRoleDefaultPolicy4E6107E2",
        "Roles": Array [
          Object {
            "Ref": "SingletonLambdac49cbfe150e047218964fb20f4e5a7adServiceRole836D5886",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "pipeline04ad36b1cluster6BE51DCA": Object {
      "Type": "AWS::ECS::Cluster",
    },
    "pipeline04ad36b1securitygroup5E09A6B3": Object {
      "Properties": Object {
        "GroupDescription": "Stack/pipeline.04ad36b1.security-group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "SupportStack:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
  },
}
`;

exports[`Pipeline with after deploy task 1`] = `
Object {
  "Parameters": Object {
    "SsmParameterValueccasglobalbuildC96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/ccas/global/build",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueccasglobalkeyC96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/ccas/global/key",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "PipelineArtefactBucketTriggerFA12D176": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "CompleteMultipartUpload",
              "CopyObject",
              "PutObject",
            ],
            "requestParameters": Object {
              "bucketName": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "artefact.eu-west-1.",
                      Object {
                        "Ref": "SsmParameterValueccasglobalbuildC96584B6F00A464EAD1953AFF4B05118Parameter",
                      },
                    ],
                  ],
                },
              ],
              "key": Array [
                "pipelines/dev-something/trigger",
              ],
            },
            "resources": Object {
              "ARN": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::artefact.eu-west-1.",
                      Object {
                        "Ref": "SsmParameterValueccasglobalbuildC96584B6F00A464EAD1953AFF4B05118Parameter",
                      },
                      "/pipelines/dev-something/trigger",
                    ],
                  ],
                },
              ],
            },
          },
          "detail-type": Array [
            "AWS API Call via CloudTrail",
          ],
          "source": Array [
            "aws.s3",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "PipelineStateMachine1814BD05",
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "PipelineStateMachineEventsRole5EB2FA4B",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "PipelineCheckCanRunPolicyF496344F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "states:ListExecutions",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "PipelineStateMachine1814BD05",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PipelineCheckCanRunPolicyF496344F",
        "Roles": Array [
          Object {
            "Ref": "SingletonLambda30ad3abbf7744804a6ef2c2f4a247362ServiceRole6FD87E48",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PipelineStateMachine1814BD05": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "PipelineStateMachineRoleDefaultPolicy24D0EC77",
        "PipelineStateMachineRole61BEBDFF",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"StartAt\\":\\"Check if the process can run\\",\\"States\\":{\\"Check if the process can run\\":{\\"Next\\":\\"Can run?\\",\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ClientExecutionTimeoutException\\",\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2}],\\"Type\\":\\"Task\\",\\"OutputPath\\":\\"$.Payload\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke\\",\\"Parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "SingletonLambda30ad3abbf7744804a6ef2c2f4a2473624B500B6F",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":{\\"stateMachineId.$\\":\\"$$.StateMachine.Id\\",\\"executionId.$\\":\\"$$.Execution.Id\\"}}},\\"Wait before rechecking status\\":{\\"Type\\":\\"Wait\\",\\"Seconds\\":15,\\"Next\\":\\"Check if the process can run\\"},\\"Can run?\\":{\\"Type\\":\\"Choice\\",\\"Choices\\":[{\\"Variable\\":\\"$.CanRunState\\",\\"StringEquals\\":\\"CONTINUE\\",\\"Next\\":\\"Collect files from S3\\"},{\\"Variable\\":\\"$.CanRunState\\",\\"StringEquals\\":\\"SKIP\\",\\"Next\\":\\"Skip\\"}],\\"Default\\":\\"Wait before rechecking status\\"},\\"Collect files from S3\\":{\\"Next\\":\\"Check if dev has stacks\\",\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ClientExecutionTimeoutException\\",\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2}],\\"Type\\":\\"Task\\",\\"OutputPath\\":\\"$.Payload\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke\\",\\"Parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "SingletonLambdac49cbfe150e047218964fb20f4e5a7ad32DEE37F",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":{\\"bucketName\\":\\"artefact.eu-west-1.",
              Object {
                "Ref": "SsmParameterValueccasglobalbuildC96584B6F00A464EAD1953AFF4B05118Parameter",
              },
              "\\",\\"bucketPrefix\\":\\"pipelines/dev-something/\\",\\"envNames\\":[\\"dev\\"]}}},\\"Check if dev has stacks\\":{\\"Type\\":\\"Choice\\",\\"Choices\\":[{\\"Or\\":[{\\"Variable\\":\\"$.StackCountPerEnv.dev\\",\\"IsNull\\":true},{\\"Variable\\":\\"$.StackCountPerEnv.dev\\",\\"NumericEquals\\":0}],\\"Next\\":\\"Skip dev\\"}],\\"Default\\":\\"Deploy dev\\"},\\"Deploy dev\\":{\\"Next\\":\\"AfterDeploy\\",\\"Type\\":\\"Task\\",\\"ResultPath\\":null,\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::ecs:runTask.sync\\",\\"Parameters\\":{\\"Cluster\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "pipeline04ad36b1cluster6BE51DCA",
                  "Arn",
                ],
              },
              "\\",\\"TaskDefinition\\":\\"StackPipelinedevTaskDefinitionA1B33879\\",\\"NetworkConfiguration\\":{\\"AwsvpcConfiguration\\":{\\"AssignPublicIp\\":\\"ENABLED\\",\\"Subnets\\":[\\"",
              Object {
                "Fn::ImportValue": "SupportStack:ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456",
              },
              "\\",\\"",
              Object {
                "Fn::ImportValue": "SupportStack:ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740",
              },
              "\\"],\\"SecurityGroups\\":[\\"",
              Object {
                "Fn::GetAtt": Array [
                  "pipeline04ad36b1securitygroup5E09A6B3",
                  "GroupId",
                ],
              },
              "\\"]}},\\"Overrides\\":{\\"ContainerOverrides\\":[{\\"Name\\":\\"app\\",\\"Environment\\":[{\\"Name\\":\\"CDK_TARGET_ROLE_ARN\\",\\"Value\\":\\"arn:aws:iam::112233445566:role/liflig-cdk-deployer-cdk\\"},{\\"Name\\":\\"CDK_ENV_NAME\\",\\"Value\\":\\"dev\\"},{\\"Name\\":\\"CDK_CLOUD_ASSEMBLY\\",\\"Value.$\\":\\"$.CloudAssembly\\"},{\\"Name\\":\\"CDK_VARIABLES\\",\\"Value.$\\":\\"$.Variables\\"}]}]},\\"LaunchType\\":\\"FARGATE\\"}},\\"AfterDeploy\\":{\\"Type\\":\\"Pass\\",\\"End\\":true},\\"Skip dev\\":{\\"Type\\":\\"Pass\\",\\"End\\":true},\\"Skip\\":{\\"Type\\":\\"Succeed\\"}},\\"TimeoutSeconds\\":10800}",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "PipelineStateMachineRole61BEBDFF",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "PipelineStateMachineEventsRole5EB2FA4B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "PipelineStateMachineEventsRoleDefaultPolicyBFB99F23": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "PipelineStateMachine1814BD05",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PipelineStateMachineEventsRoleDefaultPolicyBFB99F23",
        "Roles": Array [
          Object {
            "Ref": "PipelineStateMachineEventsRole5EB2FA4B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PipelineStateMachineRole61BEBDFF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "states.eu-west-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "PipelineStateMachineRoleDefaultPolicy24D0EC77": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambda30ad3abbf7744804a6ef2c2f4a2473624B500B6F",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambda30ad3abbf7744804a6ef2c2f4a2473624B500B6F",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdac49cbfe150e047218964fb20f4e5a7ad32DEE37F",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonLambdac49cbfe150e047218964fb20f4e5a7ad32DEE37F",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "ecs:RunTask",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Fn::Select": Array [
                        1,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "PipelinedevTaskDefinition33E76EBD",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        2,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "PipelinedevTaskDefinition33E76EBD",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        3,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "PipelinedevTaskDefinition33E76EBD",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        4,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "PipelinedevTaskDefinition33E76EBD",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        0,
                        Object {
                          "Fn::Split": Array [
                            "/",
                            Object {
                              "Fn::Select": Array [
                                5,
                                Object {
                                  "Fn::Split": Array [
                                    ":",
                                    Object {
                                      "Ref": "PipelinedevTaskDefinition33E76EBD",
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    "/",
                    Object {
                      "Fn::Select": Array [
                        1,
                        Object {
                          "Fn::Split": Array [
                            "/",
                            Object {
                              "Fn::Select": Array [
                                5,
                                Object {
                                  "Fn::Split": Array [
                                    ":",
                                    Object {
                                      "Ref": "PipelinedevTaskDefinition33E76EBD",
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ecs:StopTask",
                "ecs:DescribeTasks",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "PipelinedevTaskDefinitionTaskRole631DEEE3",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "PipelinedevTaskDefinitionExecutionRole9E269E64",
                    "Arn",
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "events:PutTargets",
                "events:PutRule",
                "events:DescribeRule",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":events:eu-west-1:",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":rule/StepFunctionsGetEventsForECSTaskRule",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PipelineStateMachineRoleDefaultPolicy24D0EC77",
        "Roles": Array [
          Object {
            "Ref": "PipelineStateMachineRole61BEBDFF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PipelinedevLogGroupBE724408": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "PipelinedevTaskDefinition33E76EBD": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "001112238813.dkr.ecr.eu-west-1.",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/incub-common-liflig-cdk-deployer:1-experimental.2",
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "PipelinedevLogGroupBE724408",
                },
                "awslogs-region": "eu-west-1",
                "awslogs-stream-prefix": "app",
              },
            },
            "Name": "app",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "PipelinedevTaskDefinitionExecutionRole9E269E64",
            "Arn",
          ],
        },
        "Family": "StackPipelinedevTaskDefinitionA1B33879",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "PipelinedevTaskDefinitionTaskRole631DEEE3",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "PipelinedevTaskDefinitionExecutionRole9E269E64": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:id",
            "Value": "Stack_c8ce3833a4ef23fd9d20ec9fe5e254ba3d0e8fcff3",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "PipelinedevTaskDefinitionExecutionRoleDefaultPolicyFE463A0E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:ecr:eu-west-1:001112238813:repository/incub-common-liflig-cdk-deployer",
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "PipelinedevLogGroupBE724408",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PipelinedevTaskDefinitionExecutionRoleDefaultPolicyFE463A0E",
        "Roles": Array [
          Object {
            "Ref": "PipelinedevTaskDefinitionExecutionRole9E269E64",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PipelinedevTaskDefinitionTaskRole631DEEE3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "PipelinedevTaskDefinitionTaskRoleDefaultPolicyDFCECB39": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::112233445566:role/liflig-cdk-deployer-cdk",
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::artefact.eu-west-1.",
                      Object {
                        "Ref": "SsmParameterValueccasglobalbuildC96584B6F00A464EAD1953AFF4B05118Parameter",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::artefact.eu-west-1.",
                      Object {
                        "Ref": "SsmParameterValueccasglobalbuildC96584B6F00A464EAD1953AFF4B05118Parameter",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:eu-west-1:",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":key/",
                    Object {
                      "Ref": "SsmParameterValueccasglobalkeyC96584B6F00A464EAD1953AFF4B05118Parameter",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PipelinedevTaskDefinitionTaskRoleDefaultPolicyDFCECB39",
        "Roles": Array [
          Object {
            "Ref": "PipelinedevTaskDefinitionTaskRole631DEEE3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SingletonLambda30ad3abbf7744804a6ef2c2f4a2473624B500B6F": Object {
      "DependsOn": Array [
        "SingletonLambda30ad3abbf7744804a6ef2c2f4a247362ServiceRole6FD87E48",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "exports.handler = async (event) => {
    // eslint-disable-next-line @typescript-eslint/no-var-requires,@typescript-eslint/no-unsafe-assignment
    const AWS = require(\\"aws-sdk\\");
    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access
    const sf = new AWS.StepFunctions();
    console.log(\\"Event received: \\", event);
    const stateMachineArn = event[\\"stateMachineId\\"];
    const currentExecutionArn = event[\\"executionId\\"];
    const executions = (await sf
        .listExecutions({
        stateMachineArn,
        statusFilter: \\"RUNNING\\",
    })
        .promise()).executions;
    console.log(\\"Executions: \\", executions);
    const currentExecution = executions.find((it) => it.executionArn == currentExecutionArn);
    if (!currentExecution) {
        throw new Error(\\"Could not find current execution\\");
    }
    const newer = executions.filter((it) => it.startDate > currentExecution.startDate).length;
    return {
        CanRunState: newer > 0 ? \\"SKIP\\" : executions.length == 1 ? \\"CONTINUE\\" : \\"WAIT\\",
    };
};",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "SingletonLambda30ad3abbf7744804a6ef2c2f4a247362ServiceRole6FD87E48",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 10,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SingletonLambda30ad3abbf7744804a6ef2c2f4a247362ServiceRole6FD87E48": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SingletonLambdac49cbfe150e047218964fb20f4e5a7ad32DEE37F": Object {
      "DependsOn": Array [
        "SingletonLambdac49cbfe150e047218964fb20f4e5a7adServiceRoleDefaultPolicy4E6107E2",
        "SingletonLambdac49cbfe150e047218964fb20f4e5a7adServiceRole836D5886",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "exports.handler = async (event) => {
    var _a;
    // eslint-disable-next-line @typescript-eslint/no-var-requires,@typescript-eslint/no-unsafe-assignment
    const AWS = require(\\"aws-sdk\\");
    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access
    const s3 = new AWS.S3();
    console.log(\\"Event received: \\", event);
    const bucketName = event.bucketName;
    const bucketPrefix = event.bucketPrefix;
    const envNames = event.envNames;
    if (bucketPrefix.slice(-1) !== \\"/\\") {
        throw new Error(\`Expected bucket prefix to end with '/' but its value is '\${bucketPrefix}'\`);
    }
    const files = await s3
        .listObjectsV2({
        Bucket: bucketName,
        Prefix: bucketPrefix,
    })
        .promise();
    async function getData(key) {
        const result = await s3
            .getObject({
            Bucket: bucketName,
            Key: key,
        })
            .promise();
        // eslint-disable-next-line @typescript-eslint/no-base-to-string
        return result.Body.toString();
    }
    let cloudAssembly = null;
    let variables = {};
    for (const file of (_a = files.Contents) !== null && _a !== void 0 ? _a : []) {
        const key = file.Key;
        const filename = key.slice(bucketPrefix.length);
        console.log(\`File: \${filename}\`);
        if (filename === \\"cloud-assembly.json\\") {
            console.log(\\"Found Cloud Assembly\\");
            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
            cloudAssembly = JSON.parse(await getData(key));
        }
        else if (/^variables.*\\\\.json$/.test(filename)) {
            console.log(\\"Found variables file\\");
            variables = {
                ...variables,
                ...JSON.parse(await getData(key)),
            };
        }
        else {
            console.log(\\"Ignoring unknown file\\");
        }
    }
    if (cloudAssembly === null) {
        throw new Error(\\"cloud-assembly.json not found\\");
    }
    return {
        CloudAssembly: JSON.stringify(cloudAssembly),
        Variables: JSON.stringify(variables),
        StackCountPerEnv: Object.fromEntries(envNames.map((name) => {
            var _a, _b;
            return [
                name,
                (_b = (_a = cloudAssembly.environments.find((it) => it.name === name)) === null || _a === void 0 ? void 0 : _a.stackNames.length) !== null && _b !== void 0 ? _b : 0,
            ];
        })),
    };
};",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "SingletonLambdac49cbfe150e047218964fb20f4e5a7adServiceRole836D5886",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SingletonLambdac49cbfe150e047218964fb20f4e5a7adServiceRole836D5886": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SingletonLambdac49cbfe150e047218964fb20f4e5a7adServiceRoleDefaultPolicy4E6107E2": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::artefact.eu-west-1.",
                      Object {
                        "Ref": "SsmParameterValueccasglobalbuildC96584B6F00A464EAD1953AFF4B05118Parameter",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::artefact.eu-west-1.",
                      Object {
                        "Ref": "SsmParameterValueccasglobalbuildC96584B6F00A464EAD1953AFF4B05118Parameter",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:eu-west-1:",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":key/",
                    Object {
                      "Ref": "SsmParameterValueccasglobalkeyC96584B6F00A464EAD1953AFF4B05118Parameter",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SingletonLambdac49cbfe150e047218964fb20f4e5a7adServiceRoleDefaultPolicy4E6107E2",
        "Roles": Array [
          Object {
            "Ref": "SingletonLambdac49cbfe150e047218964fb20f4e5a7adServiceRole836D5886",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "pipeline04ad36b1cluster6BE51DCA": Object {
      "Type": "AWS::ECS::Cluster",
    },
    "pipeline04ad36b1securitygroup5E09A6B3": Object {
      "Properties": Object {
        "GroupDescription": "Stack/pipeline.04ad36b1.security-group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "SupportStack:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
  },
}
`;
