{
  "Resources": {
    "ClusterEB0386A7": {
      "Type": "AWS::ECS::Cluster",
      "Properties": {
        "Tags": [
          {
            "Key": "Project",
            "Value": "my-project"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-cdk"
          },
          {
            "Key": "StackName",
            "Value": "ecs-update-image-no-artifact"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/Cluster/Resource"
      }
    },
    "ClusterVpcFAA3CEDF": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-update-image-no-artifact/Cluster/Vpc"
          },
          {
            "Key": "Project",
            "Value": "my-project"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-cdk"
          },
          {
            "Key": "StackName",
            "Value": "ecs-update-image-no-artifact"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/Cluster/Vpc/Resource"
      }
    },
    "ClusterVpcPublicSubnet1SubnetA9F7E0A5": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": "eu-west-1a",
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "ecs-update-image-no-artifact/Cluster/Vpc/PublicSubnet1"
          },
          {
            "Key": "Project",
            "Value": "my-project"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-cdk"
          },
          {
            "Key": "StackName",
            "Value": "ecs-update-image-no-artifact"
          }
        ],
        "VpcId": {
          "Ref": "ClusterVpcFAA3CEDF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/Cluster/Vpc/PublicSubnet1/Subnet"
      }
    },
    "ClusterVpcPublicSubnet1RouteTable5594A636": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-update-image-no-artifact/Cluster/Vpc/PublicSubnet1"
          },
          {
            "Key": "Project",
            "Value": "my-project"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-cdk"
          },
          {
            "Key": "StackName",
            "Value": "ecs-update-image-no-artifact"
          }
        ],
        "VpcId": {
          "Ref": "ClusterVpcFAA3CEDF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/Cluster/Vpc/PublicSubnet1/RouteTable"
      }
    },
    "ClusterVpcPublicSubnet1RouteTableAssociation0FBEF1F4": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "ClusterVpcPublicSubnet1RouteTable5594A636"
        },
        "SubnetId": {
          "Ref": "ClusterVpcPublicSubnet1SubnetA9F7E0A5"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/Cluster/Vpc/PublicSubnet1/RouteTableAssociation"
      }
    },
    "ClusterVpcPublicSubnet1DefaultRoute62DA4B4B": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "ClusterVpcIGW1E358A6E"
        },
        "RouteTableId": {
          "Ref": "ClusterVpcPublicSubnet1RouteTable5594A636"
        }
      },
      "DependsOn": [
        "ClusterVpcVPCGW47AC17E9"
      ],
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/Cluster/Vpc/PublicSubnet1/DefaultRoute"
      }
    },
    "ClusterVpcPublicSubnet1EIP433C56EE": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-update-image-no-artifact/Cluster/Vpc/PublicSubnet1"
          },
          {
            "Key": "Project",
            "Value": "my-project"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-cdk"
          },
          {
            "Key": "StackName",
            "Value": "ecs-update-image-no-artifact"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/Cluster/Vpc/PublicSubnet1/EIP"
      }
    },
    "ClusterVpcPublicSubnet1NATGateway0693C346": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "ClusterVpcPublicSubnet1EIP433C56EE",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "ClusterVpcPublicSubnet1SubnetA9F7E0A5"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-update-image-no-artifact/Cluster/Vpc/PublicSubnet1"
          },
          {
            "Key": "Project",
            "Value": "my-project"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-cdk"
          },
          {
            "Key": "StackName",
            "Value": "ecs-update-image-no-artifact"
          }
        ]
      },
      "DependsOn": [
        "ClusterVpcPublicSubnet1DefaultRoute62DA4B4B",
        "ClusterVpcPublicSubnet1RouteTableAssociation0FBEF1F4"
      ],
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/Cluster/Vpc/PublicSubnet1/NATGateway"
      }
    },
    "ClusterVpcPublicSubnet2Subnet059113C4": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": "eu-west-1b",
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "ecs-update-image-no-artifact/Cluster/Vpc/PublicSubnet2"
          },
          {
            "Key": "Project",
            "Value": "my-project"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-cdk"
          },
          {
            "Key": "StackName",
            "Value": "ecs-update-image-no-artifact"
          }
        ],
        "VpcId": {
          "Ref": "ClusterVpcFAA3CEDF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/Cluster/Vpc/PublicSubnet2/Subnet"
      }
    },
    "ClusterVpcPublicSubnet2RouteTable7B43F18C": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-update-image-no-artifact/Cluster/Vpc/PublicSubnet2"
          },
          {
            "Key": "Project",
            "Value": "my-project"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-cdk"
          },
          {
            "Key": "StackName",
            "Value": "ecs-update-image-no-artifact"
          }
        ],
        "VpcId": {
          "Ref": "ClusterVpcFAA3CEDF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/Cluster/Vpc/PublicSubnet2/RouteTable"
      }
    },
    "ClusterVpcPublicSubnet2RouteTableAssociation8446B27D": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "ClusterVpcPublicSubnet2RouteTable7B43F18C"
        },
        "SubnetId": {
          "Ref": "ClusterVpcPublicSubnet2Subnet059113C4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/Cluster/Vpc/PublicSubnet2/RouteTableAssociation"
      }
    },
    "ClusterVpcPublicSubnet2DefaultRoute97446C8A": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "ClusterVpcIGW1E358A6E"
        },
        "RouteTableId": {
          "Ref": "ClusterVpcPublicSubnet2RouteTable7B43F18C"
        }
      },
      "DependsOn": [
        "ClusterVpcVPCGW47AC17E9"
      ],
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/Cluster/Vpc/PublicSubnet2/DefaultRoute"
      }
    },
    "ClusterVpcPublicSubnet2EIP203DF3E5": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-update-image-no-artifact/Cluster/Vpc/PublicSubnet2"
          },
          {
            "Key": "Project",
            "Value": "my-project"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-cdk"
          },
          {
            "Key": "StackName",
            "Value": "ecs-update-image-no-artifact"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/Cluster/Vpc/PublicSubnet2/EIP"
      }
    },
    "ClusterVpcPublicSubnet2NATGateway00B24686": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "ClusterVpcPublicSubnet2EIP203DF3E5",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "ClusterVpcPublicSubnet2Subnet059113C4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-update-image-no-artifact/Cluster/Vpc/PublicSubnet2"
          },
          {
            "Key": "Project",
            "Value": "my-project"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-cdk"
          },
          {
            "Key": "StackName",
            "Value": "ecs-update-image-no-artifact"
          }
        ]
      },
      "DependsOn": [
        "ClusterVpcPublicSubnet2DefaultRoute97446C8A",
        "ClusterVpcPublicSubnet2RouteTableAssociation8446B27D"
      ],
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/Cluster/Vpc/PublicSubnet2/NATGateway"
      }
    },
    "ClusterVpcPrivateSubnet1SubnetA4EB481A": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": "eu-west-1a",
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "ecs-update-image-no-artifact/Cluster/Vpc/PrivateSubnet1"
          },
          {
            "Key": "Project",
            "Value": "my-project"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-cdk"
          },
          {
            "Key": "StackName",
            "Value": "ecs-update-image-no-artifact"
          }
        ],
        "VpcId": {
          "Ref": "ClusterVpcFAA3CEDF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/Cluster/Vpc/PrivateSubnet1/Subnet"
      }
    },
    "ClusterVpcPrivateSubnet1RouteTable5AAEDA3F": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-update-image-no-artifact/Cluster/Vpc/PrivateSubnet1"
          },
          {
            "Key": "Project",
            "Value": "my-project"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-cdk"
          },
          {
            "Key": "StackName",
            "Value": "ecs-update-image-no-artifact"
          }
        ],
        "VpcId": {
          "Ref": "ClusterVpcFAA3CEDF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/Cluster/Vpc/PrivateSubnet1/RouteTable"
      }
    },
    "ClusterVpcPrivateSubnet1RouteTableAssociation9B8A88D9": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "ClusterVpcPrivateSubnet1RouteTable5AAEDA3F"
        },
        "SubnetId": {
          "Ref": "ClusterVpcPrivateSubnet1SubnetA4EB481A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/Cluster/Vpc/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "ClusterVpcPrivateSubnet1DefaultRoute3B4D40DD": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "ClusterVpcPublicSubnet1NATGateway0693C346"
        },
        "RouteTableId": {
          "Ref": "ClusterVpcPrivateSubnet1RouteTable5AAEDA3F"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/Cluster/Vpc/PrivateSubnet1/DefaultRoute"
      }
    },
    "ClusterVpcPrivateSubnet2SubnetBD1ECB6E": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": "eu-west-1b",
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "ecs-update-image-no-artifact/Cluster/Vpc/PrivateSubnet2"
          },
          {
            "Key": "Project",
            "Value": "my-project"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-cdk"
          },
          {
            "Key": "StackName",
            "Value": "ecs-update-image-no-artifact"
          }
        ],
        "VpcId": {
          "Ref": "ClusterVpcFAA3CEDF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/Cluster/Vpc/PrivateSubnet2/Subnet"
      }
    },
    "ClusterVpcPrivateSubnet2RouteTable73064A66": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-update-image-no-artifact/Cluster/Vpc/PrivateSubnet2"
          },
          {
            "Key": "Project",
            "Value": "my-project"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-cdk"
          },
          {
            "Key": "StackName",
            "Value": "ecs-update-image-no-artifact"
          }
        ],
        "VpcId": {
          "Ref": "ClusterVpcFAA3CEDF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/Cluster/Vpc/PrivateSubnet2/RouteTable"
      }
    },
    "ClusterVpcPrivateSubnet2RouteTableAssociationFB21349E": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "ClusterVpcPrivateSubnet2RouteTable73064A66"
        },
        "SubnetId": {
          "Ref": "ClusterVpcPrivateSubnet2SubnetBD1ECB6E"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/Cluster/Vpc/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "ClusterVpcPrivateSubnet2DefaultRoute011666AF": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "ClusterVpcPublicSubnet2NATGateway00B24686"
        },
        "RouteTableId": {
          "Ref": "ClusterVpcPrivateSubnet2RouteTable73064A66"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/Cluster/Vpc/PrivateSubnet2/DefaultRoute"
      }
    },
    "ClusterVpcIGW1E358A6E": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-update-image-no-artifact/Cluster/Vpc"
          },
          {
            "Key": "Project",
            "Value": "my-project"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-cdk"
          },
          {
            "Key": "StackName",
            "Value": "ecs-update-image-no-artifact"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/Cluster/Vpc/IGW"
      }
    },
    "ClusterVpcVPCGW47AC17E9": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": {
          "Ref": "ClusterVpcIGW1E358A6E"
        },
        "VpcId": {
          "Ref": "ClusterVpcFAA3CEDF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/Cluster/Vpc/VPCGW"
      }
    },
    "TagSecret8C24D2C0": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "GenerateSecretString": {
          "GenerateStringKey": "unusedField",
          "SecretStringTemplate": "{}"
        },
        "Name": "/my-service/image-tag",
        "Tags": [
          {
            "Key": "Project",
            "Value": "my-project"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-cdk"
          },
          {
            "Key": "StackName",
            "Value": "ecs-update-image-no-artifact"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/Tag/Secret/Resource"
      }
    },
    "EcsUpdateImageRole46B32905": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::112233445566:role/some-role"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "RoleName": "my-service-deploy",
        "Tags": [
          {
            "Key": "Project",
            "Value": "my-project"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-cdk"
          },
          {
            "Key": "StackName",
            "Value": "ecs-update-image-no-artifact"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/EcsUpdateImage/Role/Resource"
      }
    },
    "EcsUpdateImageRoleDefaultPolicy120D24C4": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EcsUpdateImageStartDeployFunctionA53A6A7B",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "EcsUpdateImageStartDeployFunctionA53A6A7B",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EcsUpdateImageStatusFunction5A0B47E5",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "EcsUpdateImageStatusFunction5A0B47E5",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "EcsUpdateImageRoleDefaultPolicy120D24C4",
        "Roles": [
          {
            "Ref": "EcsUpdateImageRole46B32905"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/EcsUpdateImage/Role/DefaultPolicy/Resource"
      }
    },
    "EcsUpdateImageStartDeployFunctionServiceRole56BE1A47": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "my-project"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-cdk"
          },
          {
            "Key": "StackName",
            "Value": "ecs-update-image-no-artifact"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/EcsUpdateImage/StartDeployFunction/ServiceRole/Resource"
      }
    },
    "EcsUpdateImageStartDeployFunctionServiceRoleDefaultPolicy1ED206D7": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "secretsmanager:UpdateSecret",
              "Effect": "Allow",
              "Resource": {
                "Ref": "TagSecret8C24D2C0"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "EcsUpdateImageStartDeployFunctionServiceRoleDefaultPolicy1ED206D7",
        "Roles": [
          {
            "Ref": "EcsUpdateImageStartDeployFunctionServiceRole56BE1A47"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/EcsUpdateImage/StartDeployFunction/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "EcsUpdateImageStartDeployFunctionA53A6A7B": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-112233445566-eu-west-1",
          "S3Key": "snapshot-value.zip"
        },
        "Environment": {
          "Variables": {
            "CLUSTER_NAME": {
              "Ref": "ClusterEB0386A7"
            },
            "SERVICE_NAME": "",
            "REPOSITORY_URL": {
              "Fn::Join": [
                "",
                [
                  "112233445566.dkr.ecr.eu-west-1.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/my-repo"
                ]
              ]
            },
            "ECR_TAG_SECRET_ARN": {
              "Ref": "TagSecret8C24D2C0"
            }
          }
        },
        "FunctionName": "my-service-deploy-start",
        "Handler": "index.handler",
        "ReservedConcurrentExecutions": 1,
        "Role": {
          "Fn::GetAtt": [
            "EcsUpdateImageStartDeployFunctionServiceRole56BE1A47",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Tags": [
          {
            "Key": "Project",
            "Value": "my-project"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-cdk"
          },
          {
            "Key": "StackName",
            "Value": "ecs-update-image-no-artifact"
          }
        ],
        "Timeout": 60
      },
      "DependsOn": [
        "EcsUpdateImageStartDeployFunctionServiceRoleDefaultPolicy1ED206D7",
        "EcsUpdateImageStartDeployFunctionServiceRole56BE1A47"
      ],
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/EcsUpdateImage/StartDeployFunction/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "EcsUpdateImageStatusFunctionServiceRole8022AE8F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "my-project"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-cdk"
          },
          {
            "Key": "StackName",
            "Value": "ecs-update-image-no-artifact"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/EcsUpdateImage/StatusFunction/ServiceRole/Resource"
      }
    },
    "EcsUpdateImageStatusFunctionServiceRoleDefaultPolicy587E10B4": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecs:DeregisterTaskDefinition",
                "ecs:DescribeServices",
                "ecs:DescribeTaskDefinition",
                "ecs:DescribeTasks",
                "ecs:ListTasks",
                "ecs:ListTaskDefinitions"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "EcsUpdateImageStatusFunctionServiceRoleDefaultPolicy587E10B4",
        "Roles": [
          {
            "Ref": "EcsUpdateImageStatusFunctionServiceRole8022AE8F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/EcsUpdateImage/StatusFunction/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "EcsUpdateImageStatusFunction5A0B47E5": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async () => {\n    var _a;\n    const AWS = require(\"aws-sdk\");\n    const ecs = new AWS.ECS();\n    function requireEnv(name) {\n        const value = process.env[name];\n        if (value === undefined) {\n            throw new Error(`Missing ${name}`);\n        }\n        return value;\n    }\n    async function getService(clusterName, serviceName) {\n        var _a;\n        const services = await ecs\n            .describeServices({\n            cluster: clusterName,\n            services: [serviceName],\n        })\n            .promise();\n        if (((_a = services.services) === null || _a === void 0 ? void 0 : _a.length) !== 1) {\n            throw new Error(`Service not found: ${clusterName}/${serviceName}`);\n        }\n        return services.services[0];\n    }\n    async function getTaskDefinition(taskDefinition) {\n        return (await ecs\n            .describeTaskDefinition({\n            taskDefinition: taskDefinition,\n        })\n            .promise()).taskDefinition;\n    }\n    /**\n     * Check if the service is considered to be stabilized.\n     *\n     * Uses the logic described at\n     * https://docs.aws.amazon.com/cli/latest/reference/ecs/wait/services-stable.html\n     */\n    function isStabilized(service) {\n        var _a;\n        return (((_a = service.deployments) === null || _a === void 0 ? void 0 : _a.length) == 1 &&\n            service.runningCount == service.desiredCount);\n    }\n    function extractTag(image) {\n        if (!image.includes(\":\")) {\n            return null;\n        }\n        return image.replace(/.*:/, \"\");\n    }\n    const clusterName = requireEnv(\"CLUSTER_NAME\");\n    const serviceName = requireEnv(\"SERVICE_NAME\");\n    // The service name is unknown during initial deployment of the stack.\n    // In this case we return stabilized status as true.\n    if (serviceName === \"\") {\n        return {\n            currentTag: null,\n            stabilized: true,\n        };\n    }\n    const service = await getService(clusterName, serviceName);\n    const mainDeployment = (_a = service.deployments) === null || _a === void 0 ? void 0 : _a.find((it) => it.status === \"PRIMARY\");\n    const taskDefinition = await getTaskDefinition(mainDeployment.taskDefinition);\n    // Only one container is supported for the task definition.\n    return {\n        currentTag: extractTag(taskDefinition.containerDefinitions[0].image),\n        stabilized: isStabilized(service),\n    };\n};"
        },
        "Environment": {
          "Variables": {
            "CLUSTER_NAME": {
              "Ref": "ClusterEB0386A7"
            },
            "SERVICE_NAME": ""
          }
        },
        "FunctionName": "my-service-deploy-status",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "EcsUpdateImageStatusFunctionServiceRole8022AE8F",
            "Arn"
          ]
        },
        "Runtime": "nodejs16.x",
        "Tags": [
          {
            "Key": "Project",
            "Value": "my-project"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capralifecycle/liflig-cdk"
          },
          {
            "Key": "StackName",
            "Value": "ecs-update-image-no-artifact"
          }
        ],
        "Timeout": 60
      },
      "DependsOn": [
        "EcsUpdateImageStatusFunctionServiceRoleDefaultPolicy587E10B4",
        "EcsUpdateImageStatusFunctionServiceRole8022AE8F"
      ],
      "Metadata": {
        "aws:cdk:path": "ecs-update-image-no-artifact/EcsUpdateImage/StatusFunction/Resource"
      }
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}